"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[394],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},s),{},{components:n})):r.createElement(h,i({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7170:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],p={},c="End-to-end chat example",l={unversionedId:"Introduction",id:"Introduction",title:"End-to-end chat example",description:"This tutorial will help you set up an end-to-end chat application for sending and receiving messages using the MQTT protocol.",source:"@site/docs/Introduction.md",sourceDirName:".",slug:"/Introduction",permalink:"/courier/docs/Introduction",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Introduction.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",next:{title:"Android Setup",permalink:"/courier/docs/AndroidSetup"}},s={},u=[{value:"Components",id:"components",level:2},{value:"Flow Diagram",id:"flow-diagram",level:2}],d={toc:u};function m(e){var t=e.components,p=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,p,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"end-to-end-chat-example"},"End-to-end chat example"),(0,a.kt)("p",null,"This tutorial will help you set up an end-to-end chat application for sending and receiving messages using the MQTT protocol."),(0,a.kt)("p",null,"In this example, we are going to use Courier library for all client(Android & iOS) & backend applications. Find more about these libraries ",(0,a.kt)("a",{parentName:"p",href:"/#docs"},"here"),"."),(0,a.kt)("h2",{id:"components"},"Components"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Broker")," - For the purpose of this tutorial, you can either can use the ",(0,a.kt)("a",{parentName:"p",href:"https://www.hivemq.com/public-mqtt-broker/"},"HiveMQ")," public broker or setup your own MQTT broker.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Android application")," - Check ",(0,a.kt)("a",{parentName:"p",href:"AndroidSetup"},"this tutorial")," on how to setup the android application")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"iOS application")," - Check ",(0,a.kt)("a",{parentName:"p",href:"iOSSetup"},"this tutorial")," on how to setup the iOS application")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Backend application")," - Check ",(0,a.kt)("a",{parentName:"p",href:"GoSetup"},"this tutorial")," on how to setup the backend application"))),(0,a.kt)("h2",{id:"flow-diagram"},"Flow Diagram"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Diagram",src:n(5178).Z,width:"1498",height:"304"})),(0,a.kt)("p",null,"Client app(Android or iOS) will connect to the MQTT broker by passing the following information:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"MQTT Broker IP & Port"),(0,a.kt)("li",{parentName:"ul"},"Client ID, Username & Password for creating the MQTT connection"),(0,a.kt)("li",{parentName:"ul"},"Room code for starting the conversation")),(0,a.kt)("p",null,"Once client app(Android or iOS) connects to the broker, it will subscribe to the topic - ",(0,a.kt)("inlineCode",{parentName:"p"},"chat/{room-code}/receive")),(0,a.kt)("p",null,"When client app(Android or iOS) sends a message, it will publish to the topic - ",(0,a.kt)("inlineCode",{parentName:"p"},"chat/{username}/send")),(0,a.kt)("p",null,"Backend application subscribes to the topic - ",(0,a.kt)("inlineCode",{parentName:"p"},"chat/+/send"),", in order to listen to all messages published by client applications. This is a ",(0,a.kt)("a",{parentName:"p",href:"https://www.hivemq.com/blog/mqtt-essentials-part-5-mqtt-topics-best-practices/"},"wildcard subscription"),"."),(0,a.kt)("p",null,"Once the backend application receives a message on the above topic, it parses the message payload and publishes the message on the topic subscribed by the client applications."),(0,a.kt)("p",null,"Message payload format: ",(0,a.kt)("inlineCode",{parentName:"p"},'{"from":{sender-username},"message":{text-message},"to":{room-code}}')))}m.isMDXComponent=!0},5178:function(e,t,n){t.Z=n.p+"assets/images/flow-diagram-170d65e9a022106fa96002cc8b264f3f.png"}}]);