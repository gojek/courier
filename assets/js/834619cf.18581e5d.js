"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[484],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,f=d["".concat(c,".").concat(m)]||d[m]||s[m]||a;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1401:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={},i="iOS Setup",l={unversionedId:"iOSSetup",id:"iOSSetup",title:"iOS Setup",description:"iOS sample application for this end-to-end example can be found here",source:"@site/docs/iOSSetup.md",sourceDirName:".",slug:"/iOSSetup",permalink:"/courier/docs/iOSSetup",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/iOSSetup.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Android Setup",permalink:"/courier/docs/AndroidSetup"},next:{title:"Go Backend Setup",permalink:"/courier/docs/GoSetup"}},c={},p=[{value:"Steps",id:"steps",level:2},{value:"E2E Flow Interface",id:"e2e-flow-interface",level:2},{value:"Normal Flow Interface",id:"normal-flow-interface",level:2},{value:"Requirement",id:"requirement",level:2}],u={toc:p};function s(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ios-setup"},"iOS Setup"),(0,o.kt)("p",null,"iOS sample application for this end-to-end example can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/gojek/courier/tree/main/example-ios"},"here")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"image demo",src:r(1303).Z,width:"2059",height:"1080"})),(0,o.kt)("p",null,"There are 2 flows that you can choose:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"E2E, provide username and room code to connect. Subscription will be made to ",(0,o.kt)("inlineCode",{parentName:"li"},"chat/{room_code}/receive")," topic and published message will be send to ",(0,o.kt)("inlineCode",{parentName:"li"},"chat/{username}/send\\")," topic."),(0,o.kt)("li",{parentName:"ol"},"Normal: Standard MQTT Flow, you can add subscriptions and publish to any topic(s).")),(0,o.kt)("h2",{id:"steps"},"Steps"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Clone ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/gojek/courier"},"this github project"),", if not already done."),(0,o.kt)("li",{parentName:"ul"},"Navigate to ",(0,o.kt)("inlineCode",{parentName:"li"},"example-ios")," folder and run ",(0,o.kt)("inlineCode",{parentName:"li"},"pod install"),"."),(0,o.kt)("li",{parentName:"ul"},"Open ",(0,o.kt)("inlineCode",{parentName:"li"},"CourierE2EApp.xcworkspace"),"."),(0,o.kt)("li",{parentName:"ul"},"Build and Run using simulator or device.")),(0,o.kt)("h2",{id:"e2e-flow-interface"},"E2E Flow Interface"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Enter broker IP, broker port, client id, username, and room code to make the connection."),(0,o.kt)("li",{parentName:"ul"},"On clicking the ",(0,o.kt)("strong",{parentName:"li"},"CONNECT")," button, courier library will make the MQTT connection using the provided connect options and a new screen will appear where all sent/received messages can be seen.")),(0,o.kt)("h2",{id:"normal-flow-interface"},"Normal Flow Interface"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Configure connection (ip, port, clientid, username, password, ping, clean session)."),(0,o.kt)("li",{parentName:"ul"},"Subscribe/Unsubscribe topic(s) to broker and visualize current subscriptions."),(0,o.kt)("li",{parentName:"ul"},"Publish message(s) to any topic to broker."),(0,o.kt)("li",{parentName:"ul"},"Display received messages history.")),(0,o.kt)("h2",{id:"requirement"},"Requirement"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Xcode 13.")))}s.isMDXComponent=!0},1303:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/ios-example-61e3d3d684f2c6baec3f96456f294f2f.jpg"}}]);